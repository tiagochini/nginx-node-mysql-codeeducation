version: '3'

services: 

  app:
    build: 
      context: node
      dockerfile: Dockerfile.prod
    image: dracullabr/app:prod
    container_name: app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh npm start
    networks: 
      - node-network
    volumes: 
      - ./node:/usr/src/app
    tty: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://app:3000/healthcheck"]
      interval: 1s
      timeout: 3s
      retries: 120
    depends_on: 
      db:
        condition: service_healthy
  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    volumes: 
      - ./mysql:/var/lib/mysql
    environment: 
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "nodedb","-e", "SELECT 1"]
      interval: 1s
      timeout: 3s
      retries: 120
    networks: 
      - node-network

  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile.prod
    image: dracullabr/nginx:prod
    container_name: nginx
    networks: 
      - node-network
    ports: 
      - "8080:80"
    depends_on: 
      app:
        condition: service_healthy

networks: 
  node-network:
    driver: bridge      
